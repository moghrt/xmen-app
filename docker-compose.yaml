version: '3.8'

services:
  redis:
    image: redis:latest
    networks: 
      - redisnet
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redisdata:/data
      
  #db:
  #  image: mariadb
  #  container_name: mariadb
  #  environment:
  #    MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
  #    MYSQL_DATABASE: ${DATABASE_NAME}
  #    MYSQL_USER: ${DATABASE_USER}
  #    MYSQL_PASSWORD: ${DATABASE_PASSWORD}
  #  volumes:
  #    - data:/var/lib/mysql
  #  networks: 
  #    - webnet
  #  ports:
  #    - "3306:3306"
  #  healthcheck:
  #    test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect"]
  #    interval: 5s
  #    timeout: 10s
  #    retries: 2
  
  postgres:
    restart: always
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    networks: 
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}'"]
      interval: 5s
      timeout: 3s
      retries: 2

  backend:
    restart: always
    build: ./backend
    container_name: django
    ports:
      - '8000:8000'
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_POSTGRESQL_PORT=${DATABASE_POSTGRESQL_PORT}
      - DATABASE_MARIADB_PORT=${DATABASE_MARIADB_PORT}
      - ALLOWED_HOST=${ALLOWED_HOST}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - CORS_ORIGIN_ALLOW_ALL=${CORS_ORIGIN_ALLOW_ALL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    volumes:
      - ./backend:/app
      #- ./backend/project/static:/app/static
    networks: 
      - webnet
      - redisnet
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build: ./frontend
    container_name: vue-app
    ports:
    - 8080:80
  #nginx:
  #  image: nginx:alpine
  #  container_name: nginx-app
  #  volumes:
  #  - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #  ports:
  #  - 80:80
  #  depends_on:
  #  - app

volumes:
  data:
  pgdata:
  redisdata:

networks: 
  webnet:
    driver: bridge
  redisnet: